days <- unique(data$date)
step.per.day <- ddply(data, .(date), summarize, steps = sum(steps,na.rm = T))
qplot(steps, data = step.per.day, weight = date, geom = "histogram", binwidth = 1)
traceback()
library(ggplot2)
library(plyr)
data <- read.csv("activity.csv")
days <- unique(data$date)
step.per.day <- ddply(data, .(date), summarize, steps = sum(steps,na.rm = T))
qplot(steps, data = step.per.day, geom = "histogram", binwidth = 1)
library(ggplot2)
library(plyr)
data <- read.csv("activity.csv")
days <- unique(data$date)
step.per.day <- ddply(data, .(date), summarize, steps = sum(steps,na.rm = T))
qplot(steps, data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30)
library(ggplot2)
library(plyr)
data <- read.csv("activity.csv")
days <- unique(data$date)
step.per.day <- ddply(data, .(date), summarize, steps = sum(steps,na.rm = T))
qplot(steps, data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days")
library(ggplot2)
library(plyr)
data <- read.csv("activity.csv")
days <- unique(data$date)
step.per.day <- ddply(data, .(date), summarize, steps = sum(steps,na.rm = T))
qplot(steps, data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days", color = "blue")
?qplot
library(ggplot2)
library(plyr)
data <- read.csv("activity.csv")
days <- unique(data$date)
step.per.day <- ddply(data, .(date), summarize, steps = sum(steps,na.rm = T))
qplot(steps, data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days", color = "blue")
library(ggplot2)
library(plyr)
data <- read.csv("activity.csv")
days <- unique(data$date)
step.per.day <- ddply(data, .(date), summarize, steps = sum(steps,na.rm = T))
qplot(steps, data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days", colour = "blue")
library(ggplot2)
library(plyr)
data <- read.csv("activity.csv")
days <- unique(data$date)
step.per.day <- ddply(data, .(date), summarize, steps = sum(steps,na.rm = T))
qplot(steps, data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days", colour = blue)
xlab = "Steps", ylab = "The number of days", colour = b)
library(ggplot2)
library(plyr)
data <- read.csv("activity.csv")
days <- unique(data$date)
step.per.day <- ddply(data, .(date), summarize, steps = sum(steps,na.rm = T))
qplot(steps, data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days", colour = b)
library(ggplot2)
library(plyr)
data <- read.csv("activity.csv")
step.per.day <- ddply(data, .(date), summarize, steps = sum(steps,na.rm = T))
qplot(steps, data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days")
```{r ques1.2, echo = TRUE}
df$date <- as.Date(df$date, format = "%Y-%m-%d")  # convert date to column with date type
# create dataframe with total steps per day
df.day <- aggregate(df$steps, by = list(df$date), sum)
names(df.day)[1] <- "day"
names(df.day)[2] <- "steps"
# create dataframe with total steps per interval
df.interval <- aggregate(df$steps, by = list(df$interval), sum, na.rm = TRUE,
na.action = NULL)
names(df.interval)[1] <- "interval"
names(df.interval)[2] <- "steps"
# create dataframe with mean steps per interval
df.mean.interval <- aggregate(df$steps, by = list(df$interval), mean, na.rm = TRUE,
na.action = NULL)
names(df.mean.interval)[1] <- "interval"
names(df.mean.interval)[2] <- "mean.steps"
mean(df.day$steps, na.rm = TRUE)
median(df.day$steps, na.rm = TRUE)
df <- read.csv("activity.csv")
df$date <- as.Date(df$date, format = "%Y-%m-%d")  # convert date to column with date type
# create dataframe with total steps per day
df.day <- aggregate(df$steps, by = list(df$date), sum)
names(df.day)[1] <- "day"
names(df.day)[2] <- "steps"
# create dataframe with total steps per interval
df.interval <- aggregate(df$steps, by = list(df$interval), sum, na.rm = TRUE,
na.action = NULL)
names(df.interval)[1] <- "interval"
names(df.interval)[2] <- "steps"
# create dataframe with mean steps per interval
df.mean.interval <- aggregate(df$steps, by = list(df$interval), mean, na.rm = TRUE,
na.action = NULL)
names(df.mean.interval)[1] <- "interval"
names(df.mean.interval)[2] <- "mean.steps"
mean(df.day$steps, na.rm = TRUE)
median(df.day$steps, na.rm = TRUE)
View(df.day)
step.per.day <- aggregate(data$steps, by= days, sum)
step.per.day <- aggregate(data$steps, by= list(days), sum)
step.per.day <- aggregate(data$steps, by= list(data$date), sum)
View(step.per.day)
colnames(step.per.day) <- c("date", "steps")
View(step.per.day)
qplot(steps, data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days")
qplot(steps[!is.na(steps)], data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days")
qplot(steps, data = step.per.day[!is.na(step.per.day)], geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days")
class(step.per.day$steps)
qplot(steps, data = step.per.day[!is.na(step.per.day$steps)], geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days")
range(step.per.day$steps)[2]/30
range(step.per.day$steps)
step.per.day <- step.per.day[!is.na(step.per.day)]
qplot(steps, data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days")
range(step.per.day$steps)
(step.per.day$steps
)
step.per.day$steps
step.per.day <- step.per.day[!is.na(step.per.day),]
qplot(steps, data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days")
step.per.day <- step.per.day[!is.na(step.per.day),]
step.per.day <- aggregate(data$steps, by= list(data$date), sum)
colnames(step.per.day) <- c("date", "steps")
step.per.day <- step.per.day[!is.na(step.per.day),]
qplot(steps, data = step.per.day, geom = "histogram", binwidth = range(step.per.day$steps)[2]/30,
xlab = "Steps", ylab = "The number of days")
View(step.per.day)
library(ggplot2)
library(plyr)
data <- read.csv("activity.csv")
days = unique(data$date)
step.per.day <- aggregate(data$steps, by= list(data$date), sum)
colnames(step.per.day) <- c("date", "steps")
hist(step.per.day$steps, main = "Total number of steps taken each day",
xlab = "Steps", ylab = "The number of days")
?hist
??qplot
?qplot
?bar
View(step.per.day)
step.per.day <- aggregate(steps ~ date, data = data, FUN = sum)
View(step.per.day)
list(data$interval)
steps.interval <- aggregate(data$steps, by = list(data$interval), mean)
View(steps.interval)
View(data)
View(steps.interval)
steps.interval <- aggregate(data$steps, by = list(data$interval), mean)
View(steps.interval)
steps.interval <- aggregate(data$steps, by = list(data$interval), function { mean(na.rm = T)})
steps.interval <- aggregate(data$steps, by = list(data$interval), function() { mean(na.rm = T)})
steps.interval <- aggregate(data$steps, by = list(data$interval), mean(na.rm = T))
data.interval <- data[complete.cases(data)]
data.interval <- data[complete.cases(data),]
steps.interval <- aggregate(data.interval, by = list(data.interval$interval), mean)
warnings()
View(steps.interval)
data.interval <- data[complete.cases(data),]
steps.interval <- aggregate(data.interval, by = list(data.interval$interval), mean)
plot(steps.interval$steps, type = "l")
data.interval <- data[complete.cases(data),]
steps.interval <- aggregate(data.interval, by = list(data.interval$interval), mean)
warnings()
data.interval <- data[complete.cases(data),c(1,3)]
steps.interval <- aggregate(data.interval, by = list(data.interval$interval), mean)
View(steps.interval)
data.interval <- data[complete.cases(data),c(1,3)]
steps.interval <- aggregate(data.interval, by = list(data.interval$interval), mean)
plot(steps.interval, type = "l", xlab = "Intervals", ylab = "Steps")
?plot
plot(steps.interval$steps, type = "l", xlab = "Intervals", ylab = "Steps")
?which.max
View(step.per.day)
new.data <- merge(data, mean(step.per.day$steps), by = "date", suffixes = "mean.steps")
View(step.per.day)
library(ggplot2)
library(plyr)
data <- read.csv("activity.csv")
step.per.day <- aggregate(data$steps, by= list(data$date), sum)
colnames(step.per.day) <- c("date", "steps")
barplot(step.per.day$steps, names.arg = step.per.day$date,
main = "Total number of steps taken each day",
xlab = "Steps", ylab = "The number of days")
new.data <- merge(data, mean(step.per.day$steps), by = "date", suffixes = "mean.steps")
mean(step.per.day$steps)
levels(data$interval)
names(table(data$interval))
interval.num <- length(names(table(data$interval)))
interval.num <- as.numeric(names(table(data$interval)))
step.per.day$steps / interval.num
step.per.day$steps ./ interval.num
interval.num <- length(names(table(data$interval)))
step.per.day$steps / interval.num
new.data <- merge(data, mean(step.per.day$steps), by = "date", suffixes = "mean.steps")
class(data$date)
class(step.per.day$date)
class(data$date[1])
data$date
step.per.day$date
mean(step.per.day$steps)
interval.num <- length(names(table(data$interval)))
new.data <- merge(data, step.per.day$steps / interval.num, by = "date", suffixes = "mean.steps")
step.per.day$steps / interval.num
rep(c(0,1), each = 3)
interval.num <- length(names(table(data$interval)))
new.data <- merge(data, rep(step.per.day$steps / interval.num, each = interval.num),
by = "date", suffixes = "mean.steps")
?merge
interval.num <- length(names(table(data$interval)))
new.data <- merge(data, rep(step.per.day$steps / interval.num, each = interval.num),
by.x = "date", by.y = "date", suffixes = "mean.steps")
?copy
??copy
interval.num <- length(names(table(data$interval)))
new.data <- data
new.data$mean.steps <- rep(step.per.day$steps / interval.num, each = interval.num
View(data)
interval.num <- length(names(table(data$interval)))
new.data <- data
new.data$mean.steps <- rep(step.per.day$steps / interval.num, each = interval.num)
View(new.data)
df.missing <- merge(df, df.mean.interval, by = "interval", sort = FALSE)  # merge df and df.mean.interval dataframes
df.missing <- df.missing[with(df.missing, order(date, interval)), ]  # sort on date and interval
# replace in steps column NA with value in mean.steps column
df.missing$steps[is.na(df.missing$steps)] <- df.missing$mean.steps[is.na(df.missing$steps)]
df.missing$mean.steps <- NULL  # remove the column with the mean since it is no longer needed
View(df.missing)
View(steps.interval)
?merge
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
View(new.data)
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"), sort = F)
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
View(new.data)
?order
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
new.data <- new.data[order(date)]
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
new.data <- new.data[order("date")]
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
View(new.data)
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
new.data <- new.data[order("date"),]
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
View(new.data)
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
new.data <- new.data[order(c("date","interval"),]
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
View(new.data)
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
new.data <- new.data[order(new.data$date, new.data$interval),]
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
View(new.data)
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
new.data <- new.data[order(new.data$date, new.data$interval),]
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
new.data <- new.data[, c(2:4)]
View(new.data)
names(new.data)
new.data <- new.data[, c(2:4)]
names(new.data) <- c("steps", "date", "interval")
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
new.data <- new.data[order(new.data$date, new.data$interval),]
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
new.data <- new.data[, c(2:4)]
names(new.data) <- c("steps", "date", "interval")
View(new.data)
head(new.data)
step.per.day.new <- aggregate(new.data$steps, by= list(new.data$date), sum)
View(step.per.day.new)
step.per.day.new <- aggregate(new.data$steps, by= list(new.data$date), sum)
colnames(step.per.day) <- c("date", "steps")
View(step.per.day.new)
convert_weekday <- function(date) {
if(weekdays(date) %in% c("Saturday", "Sunday")) {
return("weekend")
}
else {
return("weekday")
}
}
new.data$weekday <- sapply(new.data$date, convert_weekday)
new.data$weekday <- as.factor(sapply(new.data$date, convert_weekday))
convert_weekday <- function(date) {
if(as.Date(weekdays(date)) %in% c("Saturday", "Sunday")) {
return("weekend")
}
else {
return("weekday")
}
}
new.data$weekday <- sapply(new.data$date, convert_weekday)
convert_weekday <- function(date) {
if(weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
return("weekend")
}
else {
return("weekday")
}
}
new.data$weekday <- sapply(new.data$date, convert_weekday)
View(new.data)
levels(new.data$weekday)
table(new.data$weekday)
```{r ques4.2,echo = TRUE}
qplot(step.per.day$steps,
main = "Total number of steps taken each day",
xlab = "Steps", ylab = "The number of days")
range(step.per.day$steps)
range(step.per.day$steps[!is.na(step.per.day$steps)])
qplot(step.per.day$steps,
main = "Total number of steps taken each day",
xlab = "Steps", ylab = "The number of days",
binwidth = range(step.per.day$steps[!is.na(step.per.day$steps)])[2])
qplot(step.per.day$steps,
main = "Total number of steps taken each day",
xlab = "Steps", ylab = "The number of days",
binwidth = range(step.per.day$steps[!is.na(step.per.day$steps)])[2]/30)
?qplot
?aggregate
steps.interval.new <- aggregate(new.data, by = list(new.data$interval), mean)
View(steps.interval.new)
?subset
?aggregate
steps.interval.new <- aggregate(new.data, by = list(new.data$interval), subset = weekday, FUN = mean)
warnings()
View(steps.interval.new)
View(data.interval)
View(steps.interval.new)
steps.interval.new <- aggregate(new.data$steps, by = list(new.data$interval), subset = names(new.data), mean)
View(steps.interval.new)
names(new.data)
steps.interval.new <- aggregate(new.data$steps, by = list(new.data$interval), mean)
View(steps.interval.new)
test <- tapply(new.data, new.data$steps, mean)
test <- tapply(new.data$interval, new.data$steps, mean)
View(steps.interval.new)
?aggregate
testDF <- data.frame(v1 = c(1,3,5,7,8,3,5,NA,4,5,7,9),
v2 = c(11,33,55,77,88,33,55,NA,44,55,77,99) )
by1 <- c("red", "blue", 1, 2, NA, "big", 1, 2, "red", 1, NA, 12)
by2 <- c("wet", "dry", 99, 95, NA, "damp", 95, 99, "red", 99, NA, NA)
aggregate(x = testDF, by = list(by1, by2), FUN = "mean")
View(testDF)
list(by1, by2)
steps.interval.new <- aggregate(new.data$steps, by = list(new.data$interval, new.data$weekday), mean)
View(steps.interval.new)
levels(new.data$weekday)
names(table(new.data$weekday))
par(mfrow(2,1))
for(days in names(table(new.data$weekday)) {
step.interval.mean <- aggregate(new.data, by = list(new.data$interval), subset = (new.data$weekday == days), FUN = mean)
plot(step.interval.mean, type = "l", xlab = "Intervals", ylab = "Steps", main = days)
par(mfrow = (2,1))
for(days in names(table(new.data$weekday)) {
step.interval.mean <- aggregate(new.data, by = list(new.data$interval), subset = (new.data$weekday == days), FUN = mean)
plot(step.interval.mean, type = "l", xlab = "Intervals", ylab = "Steps", main = days)
}
par(mfrow = (2,1))
for(days in names(table(new.data$weekday))) {
step.interval.mean <- aggregate(new.data, by = list(new.data$interval), subset = (new.data$weekday == days), FUN = mean)
plot(step.interval.mean, type = "l", xlab = "Intervals", ylab = "Steps", main = days)
}
par(mfrow = (2,1))
for(days in names(table(new.data$weekday))) {
step.interval.mean <- aggregate(new.data, by = list(new.data$interval), subset = (new.data$weekday == days), FUN = mean)
plot(step.interval.mean, type = "l", main = days)
}
par(mfrow = (2,1))
for(days in names(table(new.data$weekday))) {
step.interval.mean <- aggregate(new.data, by = list(new.data$interval), subset = (new.data$weekday == days), FUN = mean)
plot(step.interval.mean, type = "l", xlab = "Intervals", ylab = "Steps", main = days)
}
View(step.interval.mean)
days
step.interval.mean <- aggregate(new.data, by = list(new.data$interval), subset = (new.data$weekday == days), FUN = mean)
warnings()
View(new.data)
step.interval.mean <- aggregate(new.data, by = list(new.data$interval), subset = (new.data$weekday == days), FUN = mean)
warnings()
par(mfrow = (2,1))
for(days in names(table(new.data$weekday))) {
step.interval.mean <- aggregate(new.data$steps, by = list(new.data$interval), subset = (new.data$weekday == days), FUN = mean)
plot(step.interval.mean, type = "l", xlab = "Intervals", ylab = "Steps", main = days)
}
?toupper
for(days in names(table(new.data$weekday))) { days}
for(days in names(table(new.data$weekday))) { print(days) }
days = "weekday"
days
step.interval.mean <- aggregate(new.data$steps, by = list(new.data$interval), subset = (new.data$weekday == days), FUN = mean)
View(step.interval.mean)
days <- "weekend"
step.interval.mean.n <- aggregate(new.data$steps, by = list(new.data$interval), subset = (new.data$weekday == days), FUN = mean)
View(step.interval.mean.n)
setwd("~/Coursera/Data Science Specialization/Reproducible Research/hw1/RepData_PeerAssessment1")
data <- read.csv("activity.csv")
data$date <- as.Date(data$date, format = "%Y-%m-%d")
summary(data)
data <- read.csv("activity.csv")
step.per.day <- aggregate(data$steps, by= list(data$date), sum)
colnames(step.per.day) <- c("date", "steps")
barplot(step.per.day$steps, names.arg = step.per.day$date,
main = "Total number of steps taken each day",
xlab = "Steps", ylab = "The number of days")
data.interval <- data[complete.cases(data),c(1,3)]
steps.interval <- aggregate(steps ~ interval, data = data.interval, mean)
plot(steps.interval, type = "l", xlab = "Intervals", ylab = "Steps")
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
new.data <- new.data[order(new.data$date, new.data$interval),]
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
new.data <- new.data[, c(2:4)]
names(new.data) <- c("steps", "date", "interval")
step.per.day.new <- aggregate(new.data$steps, by= list(new.data$date), sum)
colnames(step.per.day.new) <- c("date", "steps")
barplot(step.per.day.new$steps, names.arg = step.per.day.new$date,
main = "Total number of steps taken each day",
xlab = "Steps", ylab = "The number of days")
mean(step.per.day.new$steps, na.rm = T)
median(step.per.day.new$steps, na.rm = T)
convert_weekday <- function(date) {
if(weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
return("weekend")
}
else {
return("weekday")
}
}
new.data$weekday <- as.factor(sapply(new.data$date, convert_weekday))
head(new.data,5)
par(mfrow = c(2,1))
for(days in names(table(new.data$weekday))) {
step.interval.mean <- NULL
step.interval.mean <- aggregate(steps ~ interval, data = new.data, subset = (new.data$weekday == days), FUN = mean)
plot(step.interval.mean, type = "l", xlab = "Intervals", ylab = "Steps", main = days)
}
View(step.interval.mean)
View(new.data)
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
new.data <- new.data[order(new.data$date, new.data$interval),]
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
new.data <- new.data[, c(2:4)]
names(new.data) <- c("steps", "date", "interval")
View(new.data)
View(data)
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
View(new.data)
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
new.data <- new.data[order(new.data$date, new.data$interval),]
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
new.data <- new.data[, c(2:4)]
View(new.data)
View(steps.interval)
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
View(new.data)
new.data <- new.data[order(new.data$date, new.data$interval),]
View(new.data)
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
View(new.data)
new.data <- new.data[, c(2:4)]
View(new.data)
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
new.data <- new.data[order(new.data$date, new.data$interval),]
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
View(new.data)
names(new.data)
new.data <- merge(data, steps.interval, by = "interval", suffixes = c(".per",".mean"))
new.data <- new.data[order(new.data$date, new.data$interval),]
na.index <- is.na(new.data$steps.per)
new.data$steps.per[na.index] <- new.data$steps.mean[na.index]
new.data <- new.data[, c(1:3)]
names(new.data) <- c("interval", "steps", "date")
View(new.data)
step.per.day.new <- aggregate(new.data$steps, by= list(new.data$date), sum)
colnames(step.per.day.new) <- c("date", "steps")
barplot(step.per.day.new$steps, names.arg = step.per.day.new$date,
main = "Total number of steps taken each day",
xlab = "Steps", ylab = "The number of days")
new.data$weekday <- as.factor(sapply(new.data$date, convert_weekday))
par(mfrow = c(2,1))
for(days in names(table(new.data$weekday))) {
step.interval.mean <- NULL
step.interval.mean <- aggregate(steps ~ interval, data = new.data, subset = (new.data$weekday == days), FUN = mean)
plot(step.interval.mean, type = "l", xlab = "Intervals", ylab = "Steps", main = days)
}
setwd("~/Coursera/Data Science Specialization/Reproducible Research/hw1/RepData_PeerAssessment1")
